#!/bin/bash
set -e

echo "==> üöÄ D√âMARRAGE DU D√âPLOIEMENT STUDUP"
echo "=========================================="

# √âtape 1: Aller dans le dossier de l'application
cd /var/www/studup-backend
echo "üìÅ Dossier: $(pwd)"

# √âtape 2: Donner les permissions temporaires pour l'installation
echo "üîß Configuration des permissions temporaires..."
sudo chown -R ubuntu:ubuntu /var/www/studup-backend
sudo chmod -R 755 /var/www/studup-backend

# √âtape 3: NETTOYAGE COMPLET DES CACHES CORROMPUS
echo "üßπ NETTOYAGE COMPLET DES CACHES"
rm -f bootstrap/cache/*.php
rm -f storage/framework/cache/*.php
rm -f storage/framework/views/*.php
rm -f storage/framework/sessions/*
echo "‚úÖ Caches corrompus supprim√©s"

# √âtape 4: Configuration de l'environnement
echo "üîß CONFIGURATION ENVIRONNEMENT"
if [ ! -f .env ]; then
    echo "üìÑ Cr√©ation du fichier .env..."
    cp .env.example .env
    echo "‚úÖ .env cr√©√© √† partir de .env.example"
    echo "‚ö†Ô∏è  IMPORTANT: Configurez les variables dans .env !"
else
    echo "‚úÖ .env existe d√©j√†"
fi

# √âtape 5: Cr√©ation de la structure des dossiers
echo "üìÅ CR√âATION DES DOSSIERS LARAVEL"
mkdir -p storage/app/public
mkdir -p storage/framework/sessions
mkdir -p storage/framework/views
mkdir -p storage/framework/cache/data
mkdir -p storage/logs
mkdir -p bootstrap/cache
mkdir -p vendor
echo "‚úÖ Structure des dossiers cr√©√©e"

# √âtape 6: Installation des d√©pendances Composer
echo "üì¶ INSTALLATION DES D√âPENDANCES COMPOSER"
composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
echo "‚úÖ D√©pendances Composer install√©es"

# √âtape 7: Configuration des permissions POUR APACHE
echo "üîê CONFIGURATION DES PERMISSIONS APACHE"
sudo chown -R www-data:www-data /var/www/studup-backend
sudo chmod -R 755 /var/www/studup-backend
sudo chmod -R 775 storage bootstrap/cache
sudo chmod -R 777 storage/framework/cache storage/logs

# Cr√©er les fichiers de cache vides avec les bonnes permissions
sudo -u www-data touch storage/logs/laravel.log
sudo -u www-data touch bootstrap/cache/config.php
sudo -u www-data touch bootstrap/cache/packages.php
sudo -u www-data touch bootstrap/cache/services.php

sudo chmod 666 storage/logs/laravel.log
sudo chmod 666 bootstrap/cache/config.php
sudo chmod 666 bootstrap/cache/packages.php
sudo chmod 666 bootstrap/cache/services.php

echo "‚úÖ Permissions Apache configur√©es"

# √âtape 8: Configuration de l'application Laravel
echo "‚öôÔ∏è  CONFIGURATION LARAVEL"

# G√©n√©ration de la cl√© API (m√©thode manuelle)
if ! grep -q "APP_KEY=base64" .env; then
    echo "üîë G√©n√©ration de la cl√© API..."
    KEY=$(php -r "echo 'base64:'.base64_encode(random_bytes(32));")
    sed -i "s/APP_KEY=/APP_KEY=$KEY/" .env
    echo "‚úÖ Cl√© API g√©n√©r√©e manuellement"
else
    echo "‚úÖ Cl√© API d√©j√† configur√©e"
fi

# Configuration de l'URL
if ! grep -q "APP_URL=" .env; then
    echo "APP_URL=https://vps-d91fd27c.vps.ovh.net" >> .env
    echo "‚úÖ APP_URL configur√©"
fi

# √âtape 9: R√âINITIALISATION MANUELLE DU FRAMEWORK
echo "üîÑ R√âINITIALISATION DU FRAMEWORK LARAVEL"

# Vider compl√®tement les caches et r√©g√©n√©rer l'autoloader
composer dump-autoload

# √âtape 10: CR√âATION MANUELLE DES FICHIERS DE CACHE
echo "üî® CR√âATION MANUELLE DES CACHES"

# Cr√©er un fichier config.php vide mais valide
sudo -u www-data bash -c 'cat > bootstrap/cache/config.php << "EOF"
<?php return array (
  // Configuration manuellement initialis√©e
  // Les caches seront r√©g√©n√©r√©s par Laravel au premier acc√®s
);
EOF'

# Cr√©er les autres fichiers de cache vides
sudo -u www-data bash -c 'echo "<?php return array ();" > bootstrap/cache/packages.php'
sudo -u www-data bash -c 'echo "<?php return array ();" > bootstrap/cache/services.php'

sudo chmod 666 bootstrap/cache/*.php

echo "‚úÖ Fichiers de cache cr√©√©s manuellement"

# √âtape 11: MIGRATIONS AVEC APPROCHE DIRECTE SIMPLIFI√âE
echo "üóÑÔ∏è  MIGRATIONS BASE DE DONN√âES"

# Approche ultra-simplifi√©e pour les migrations
if php -r '
$dotenv = Dotenv\Dotenv::createUnsafeImmutable(__DIR__);
$dotenv->load();
$host = getenv("DB_HOST") ?: "127.0.0.1";
$port = getenv("DB_PORT") ?: "3306";
$database = getenv("DB_DATABASE") ?: "forge";
$username = getenv("DB_USERNAME") ?: "forge";
$password = getenv("DB_PASSWORD") ?: "";

if (empty($database) || $database === "forge") {
    echo "‚ö†Ô∏è  Base de donn√©es non configur√©e dans .env\n";
    exit(1);
}

try {
    $pdo = new PDO("mysql:host=$host;port=$port", $username, $password);
    $pdo->exec("CREATE DATABASE IF NOT EXISTS $database");
    echo "‚úÖ Base de donn√©es '$database' v√©rifi√©e/cr√©√©e\n";
} catch (PDOException $e) {
    echo "‚ùå Erreur base de donn√©es: " . $e->getMessage() . "\n";
    exit(1);
}
'; then
    echo "‚úÖ Base de donn√©es pr√™te"
else
    echo "‚ö†Ô∏è  V√©rification base de donn√©es √©chou√©e"
fi

# √âtape 12: LIEN DE STOCKAGE AVEC PERMISSIONS
echo "üîó LIEN DE STOCKAGE"

# Cr√©er le lien de stockage avec les bonnes permissions
if [ ! -L "public/storage" ]; then
    sudo -u www-data ln -sf ../storage/app/public public/storage
    echo "‚úÖ Lien de stockage cr√©√©"
else
    echo "‚úÖ Lien de stockage existe d√©j√†"
fi

# √âtape 13: V√âRIFICATIONS FINALES
echo "‚úÖ V√âRIFICATIONS FINALES"

# V√©rifier le dossier public
if [ -d public ] && [ -f public/index.php ]; then
    echo "‚úÖ public/index.php trouv√©"
else
    echo "‚ùå ERREUR: public/index.php introuvable !"
    exit 1
fi

# V√©rifier que vendor existe
if [ -d vendor ]; then
    echo "‚úÖ dossier vendor trouv√©"
else
    echo "‚ùå ERREUR: dossier vendor introuvable !"
    exit 1
fi

# V√©rifier les fichiers de cache
if [ -f bootstrap/cache/config.php ] && [ -f bootstrap/cache/services.php ]; then
    echo "‚úÖ Fichiers de cache pr√©sents"
else
    echo "‚ùå ERREUR: Fichiers de cache manquants"
    exit 1
fi

# V√©rifier le lien de stockage
if [ -L "public/storage" ]; then
    echo "‚úÖ Lien de stockage pr√©sent"
else
    echo "‚ö†Ô∏è  Lien de stockage manquant"
fi

echo "=========================================="
echo "üéâ D√âPLOIEMENT R√âUSSI !"
echo "üåê Votre application est disponible sur:"
echo "   https://vps-d91fd27c.vps.ovh.net"
echo "=========================================="

# √âtape 14: MESSAGE D'INFORMATION IMPORTANT
echo ""
echo "üí° INFORMATION IMPORTANTE:"
echo "   Laravel r√©g√©n√©rera automatiquement les caches optimis√©s"
echo "   au premier acc√®s √† l'application. Ceci est normal."
echo ""