name: Déploiement Fiable Studup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Déploiement sur le serveur
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: 20m
          script: |
            set -e
            echo "🚀 DÉPLOIEMENT AVEC CORRECTION ERREUR 500"
            echo "=========================================="
            
            cd /var/www
            echo "📁 Dossier: /var/www"
            
            # Sauvegarde
            BACKUP_DIR="/tmp/studup-backup-$(date +%s)"
            if [ -d studup-backend ]; then
                echo "💾 Sauvegarde des données critiques..."
                mkdir -p "$BACKUP_DIR"
                cp -rf studup-backend/storage/app/public "$BACKUP_DIR/" 2>/dev/null || true
                cp -f studup-backend/.env "$BACKUP_DIR/" 2>/dev/null || true
                echo "✅ Sauvegarde effectuée"
            fi
            
            # Nettoyage
            echo "🧹 Nettoyage complet..."
            sudo rm -rf studup-backend
            echo "✅ Ancien dossier supprimé"
            
            # Clonage
            echo "📦 Clonage du nouveau code..."
            git clone https://github.com/kasteh/studup-backend.git
            cd studup-backend
            echo "✅ Code cloné"
            
            # Configuration .env
            echo "🔧 Configuration de l'environnement..."
            if [ -f "$BACKUP_DIR/.env" ]; then
                sudo cp "$BACKUP_DIR/.env" .env
                echo "✅ .env restauré"
            elif [ -f .env.example ]; then
                sudo cp .env.example .env
                echo "✅ .env créé depuis .env.example"
            else
                echo "❌ ERREUR: Aucun fichier .env.example trouvé"
                exit 1
            fi
            
            # Clé APP_KEY
            if ! grep -q "APP_KEY=base64:" .env; then
                echo "🔑 Génération de la clé APP_KEY..."
                NEW_KEY=$(php -r "echo 'base64:'.base64_encode(random_bytes(32));")
                sudo sed -i "s/APP_KEY=.*/APP_KEY=$NEW_KEY/" .env
                echo "✅ Clé APP_KEY générée"
            fi

            # Structure des dossiers (avant composer)
            echo "📁 Création des dossiers..."
            sudo mkdir -p storage/app/public
            sudo mkdir -p storage/framework/sessions
            sudo mkdir -p storage/framework/views
            sudo mkdir -p storage/framework/cache/data
            sudo mkdir -p storage/logs
            sudo mkdir -p bootstrap/cache
            echo "✅ Dossiers créés"
            
            # 🔥 Permissions critiques
            echo "🔐 Configuration des permissions APACHE..."
            sudo chown -R www-data:www-data /var/www/studup-backend
            sudo chmod -R 755 /var/www/studup-backend
            sudo chmod -R 775 storage bootstrap/cache
            sudo chmod -R 777 storage/framework/cache storage/logs
            sudo chmod -R 775 bootstrap/cache
            
            # Création des fichiers essentiels
            sudo touch storage/logs/laravel.log
            sudo chown www-data:www-data storage/logs/laravel.log
            sudo chmod 666 storage/logs/laravel.log
            echo "✅ Permissions configurées"

            # Installation Composer (en www-data)
            echo "📦 Installation Composer..."
            sudo -u www-data composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            echo "✅ Dépendances installées"
            
            # Restauration uploads
            echo "📁 Restauration des fichiers uploadés..."
            if [ -d "$BACKUP_DIR/public" ]; then
                sudo cp -rf "$BACKUP_DIR/public"/* storage/app/public/ 2>/dev/null || true
                sudo chown -R www-data:www-data storage/app/public
                echo "✅ Fichiers uploadés restaurés"
            fi
            
            # Lien de stockage
            echo "🔗 Création du lien de stockage..."
            if [ -L "public/storage" ]; then
                sudo rm -f public/storage
            fi
            sudo ln -sf ../storage/app/public public/storage
            sudo chown -h www-data:www-data public/storage 2>/dev/null || true
            echo "✅ Lien de stockage créé"
            
            # 🔥 Réparation spécifique erreur 500
            echo "🔧 Réparation spécifique erreur 500..."
            sudo -u www-data php artisan config:clear
            sudo -u www-data php artisan cache:clear
            sudo -u www-data php artisan route:clear
            sudo -u www-data php artisan view:clear
            sudo -u www-data composer dump-autoload --optimize
            
            # Test Laravel
            echo "🔍 Test de fonctionnement Laravel..."
            if php -r "require 'vendor/autoload.php'; echo '✅ Autoloader OK';" 2>/dev/null; then
                echo "✅ Laravel peut charger l'autoloader"
            else
                echo "❌ ERREUR: Problème avec l'autoloader"
                echo "📋 Tentative de réparation..."
                sudo -u www-data composer dump-autoload
                echo "✅ Autoloader réparé"
            fi
            
            # Nettoyage
            echo "🧹 Nettoyage final..."
            sudo rm -rf "$BACKUP_DIR" 2>/dev/null || true
            
            # Redémarrage Apache
            echo "🔄 Redémarrage d'Apache..."
            sudo systemctl restart apache2
            
            # Test final
            echo "📋 Test final de l'application..."
            sleep 10
            
            for i in {1..5}; do
                if curl -s -f --connect-timeout 20 http://localhost >/dev/null 2>&1; then
                    echo "🎉 DÉPLOIEMENT RÉUSSI !"
                    echo "🌐 Application accessible sur: https://vps-d91fd27c.vps.ovh.net"
                    exit 0
                fi
                echo "⏳ Tentative $i/5 - Attente supplémentaire..."
                sleep 5
            done
            
            echo "⚠️  L'application peut avoir des problèmes de configuration"
            echo "💡 Vérifiez: sudo tail -f /var/www/studup-backend/storage/logs/laravel.log"
            echo "💡 Vérifiez la base de données dans le .env"
            echo "✅ DÉPLOIEMENT TERMINÉ - Vérification manuelle recommandée"
            
            echo "=========================================="