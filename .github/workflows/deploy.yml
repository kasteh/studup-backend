name: Déploiement Fiable Studup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Déploiement sur le serveur
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: 30m
          script: |
            set -e
            echo "🚀 Déploiement Studup - Début"
            echo "=========================================="

            cd /var/www

            # Sauvegarde
            BACKUP_DIR="/tmp/studup-backup-$(date +%s)"
            if [ -d studup-backend ]; then
                echo "💾 Sauvegarde en cours..."
                mkdir -p "$BACKUP_DIR"
                cp -rf studup-backend/storage/app/public "$BACKUP_DIR/" 2>/dev/null || true
                cp -f studup-backend/.env "$BACKUP_DIR/" 2>/dev/null || true
                echo "✅ Sauvegarde effectuée"
            fi

            # Nettoyage
            echo "🧹 Nettoyage du dossier existant..."
            sudo rm -rf studup-backend
            echo "✅ Ancien dossier supprimé"

            # Clonage
            echo "📦 Clonage du dépôt..."
            git clone https://github.com/kasteh/studup-backend.git
            cd studup-backend
            echo "✅ Code cloné"

            # Configuration .env
            echo "🔧 Configuration de l'environnement..."
            if [ -f "$BACKUP_DIR/.env" ]; then
                sudo cp "$BACKUP_DIR/.env" .env
                echo "✅ .env restauré"
            elif [ -f .env.example ]; then
                sudo cp .env.example .env
                echo "✅ .env créé depuis .env.example"
            else
                echo "❌ ERREUR: Aucun fichier .env trouvé"
                exit 1
            fi

            # Clé APP_KEY
            if ! grep -q "APP_KEY=base64:" .env; then
                echo "🔑 Génération de la clé APP_KEY..."
                NEW_KEY=$(php -r "echo 'base64:'.base64_encode(random_bytes(32));")
                sudo sed -i "s/APP_KEY=.*/APP_KEY=$NEW_KEY/" .env
                echo "✅ Clé APP_KEY générée"
            fi

            # Création des dossiers nécessaires
            echo "📁 Création des dossiers..."
            sudo mkdir -p storage/app/public storage/framework/sessions storage/framework/views storage/framework/cache/data storage/logs bootstrap/cache storage/api-docs database/migrations
            sudo chown -R www-data:www-data storage bootstrap/cache database/migrations
            sudo chmod -R 775 storage bootstrap/cache database/migrations storage/api-docs
            echo "✅ Dossiers créés et permissions appliquées"

            # Installation des dépendances Composer
            echo "📦 Installation Composer..."
            sudo -u www-data composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            echo "✅ Dépendances installées"

            # Lien de stockage
            echo "🔗 Création du lien de stockage..."
            if [ -L "public/storage" ]; then
                sudo rm -f public/storage
            fi
            sudo ln -sf ../storage/app/public public/storage
            sudo chown -h www-data:www-data public/storage 2>/dev/null || true
            echo "✅ Lien de stockage créé"

            # Publier et générer Swagger
            echo "📄 Publication L5 Swagger..."
            sudo -u www-data php artisan vendor:publish --provider="L5Swagger\L5SwaggerServiceProvider" --force
            sudo -u www-data php artisan l5-swagger:generate
            echo "✅ Documentation Swagger générée"

            # Publier Sanctum
            echo "🔐 Publication Sanctum..."
            sudo -u www-data php artisan vendor:publish --provider="Laravel\Sanctum\SanctumServiceProvider" --force
            echo "✅ Sanctum publié"

            # Réparation spécifique erreur 500 et cache
            echo "🔧 Nettoyage cache et configuration..."
            sudo -u www-data php artisan config:clear
            sudo -u www-data php artisan cache:clear
            sudo -u www-data php artisan route:clear
            sudo -u www-data php artisan view:clear
            sudo -u www-data composer dump-autoload --optimize
            echo "✅ Cache et autoload OK"

            # Restauration fichiers uploadés
            echo "📁 Restauration fichiers uploadés..."
            if [ -d "$BACKUP_DIR/public" ]; then
                sudo cp -rf "$BACKUP_DIR/public"/* storage/app/public/ 2>/dev/null || true
                sudo chown -R www-data:www-data storage/app/public
                echo "✅ Uploads restaurés"
            fi

            # Redémarrage Apache
            echo "🔄 Redémarrage Apache..."
            sudo systemctl restart apache2

            # Test final
            echo "📋 Test de l'application..."
            sleep 10
            for i in {1..5}; do
                if curl -s -f --connect-timeout 20 http://localhost >/dev/null 2>&1; then
                    echo "🎉 Déploiement réussi !"
                    echo "🌐 Application accessible sur: https://vps-d91fd27c.vps.ovh.net"
                    exit 0
                fi
                echo "⏳ Tentative $i/5 - attente supplémentaire..."
                sleep 5
            done

            echo "⚠️ L'application peut avoir des problèmes de configuration. Vérifiez les logs."
            echo "💡 sudo tail -f /var/www/studup-backend/storage/logs/laravel.log"
            echo "=========================================="
