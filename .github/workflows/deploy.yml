name: D√©ploiement Fiable Studup

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: D√©ploiement sur le serveur
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: 20m
          script: |
            set -e
            echo "üöÄ D√âPLOIEMENT AVEC CORRECTION ERREUR 500"
            echo "=========================================="
            
            cd /var/www
            echo "üìÅ Dossier: /var/www"
            
            # Sauvegarde
            BACKUP_DIR="/tmp/studup-backup-$(date +%s)"
            if [ -d studup-backend ]; then
                echo "üíæ Sauvegarde des donn√©es critiques..."
                mkdir -p "$BACKUP_DIR"
                cp -rf studup-backend/storage/app/public "$BACKUP_DIR/" 2>/dev/null || true
                cp -f studup-backend/.env "$BACKUP_DIR/" 2>/dev/null || true
                echo "‚úÖ Sauvegarde effectu√©e"
            fi
            
            # Nettoyage
            echo "üßπ Nettoyage complet..."
            sudo rm -rf studup-backend
            echo "‚úÖ Ancien dossier supprim√©"
            
            # Clonage
            echo "üì¶ Clonage du nouveau code..."
            git clone https://github.com/kasteh/studup-backend.git
            cd studup-backend
            echo "‚úÖ Code clon√©"
            
            # Configuration .env
            echo "üîß Configuration de l'environnement..."
            if [ -f "$BACKUP_DIR/.env" ]; then
                sudo cp "$BACKUP_DIR/.env" .env
                echo "‚úÖ .env restaur√©"
            elif [ -f .env.example ]; then
                sudo cp .env.example .env
                echo "‚úÖ .env cr√©√© depuis .env.example"
            else
                echo "‚ùå ERREUR: Aucun fichier .env.example trouv√©"
                exit 1
            fi
            
            # Cl√© APP_KEY
            if ! grep -q "APP_KEY=base64:" .env; then
                echo "üîë G√©n√©ration de la cl√© APP_KEY..."
                NEW_KEY=$(php -r "echo 'base64:'.base64_encode(random_bytes(32));")
                sudo sed -i "s/APP_KEY=.*/APP_KEY=$NEW_KEY/" .env
                echo "‚úÖ Cl√© APP_KEY g√©n√©r√©e"
            fi
            
            # Installation Composer
            echo "üì¶ Installation Composer..."
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev --no-scripts
            echo "‚úÖ D√©pendances install√©es"
            
            # Structure des dossiers
            echo "üìÅ Cr√©ation des dossiers..."
            sudo mkdir -p storage/app/public
            sudo mkdir -p storage/framework/sessions
            sudo mkdir -p storage/framework/views
            sudo mkdir -p storage/framework/cache/data
            sudo mkdir -p storage/logs
            sudo mkdir -p bootstrap/cache
            echo "‚úÖ Dossiers cr√©√©s"
            
            # üî• PERMISSIONS CRITIQUES POUR √âVITER ERREUR 500
            echo "üîê Configuration des permissions APACHE..."
            sudo chown -R www-data:www-data /var/www/studup-backend
            sudo chmod -R 755 /var/www/studup-backend
            sudo chmod -R 775 storage bootstrap/cache
            sudo chmod -R 777 storage/framework/cache storage/logs
            
            # Cr√©ation des fichiers essentiels
            sudo touch storage/logs/laravel.log
            sudo chown www-data:www-data storage/logs/laravel.log
            sudo chmod 666 storage/logs/laravel.log
            
            # Fichiers de cache vides mais valides
            sudo -u www-data bash -c 'echo "<?php return [];" > bootstrap/cache/config.php'
            sudo -u www-data bash -c 'echo "<?php return [];" > bootstrap/cache/packages.php'
            sudo -u www-data bash -c 'echo "<?php return [];" > bootstrap/cache/services.php'
            sudo chmod 666 bootstrap/cache/*.php
            echo "‚úÖ Permissions configur√©es"
            
            # Restauration uploads
            echo "üìÅ Restauration des fichiers upload√©s..."
            if [ -d "$BACKUP_DIR/public" ]; then
                sudo cp -rf "$BACKUP_DIR/public"/* storage/app/public/ 2>/dev/null || true
                sudo chown -R www-data:www-data storage/app/public
                echo "‚úÖ Fichiers upload√©s restaur√©s"
            fi
            
            # Lien de stockage
            echo "üîó Cr√©ation du lien de stockage..."
            if [ -L "public/storage" ]; then
                sudo rm -f public/storage
            fi
            sudo ln -sf ../storage/app/public public/storage
            sudo chown -h www-data:www-data public/storage 2>/dev/null || true
            echo "‚úÖ Lien de stockage cr√©√©"
            
            # üî• R√âPARATION SP√âCIFIQUE ERREUR 500
            echo "üîß R√©paration sp√©cifique erreur 500..."
            composer dump-autoload --optimize
            sudo rm -f bootstrap/cache/*.php 2>/dev/null || true
            
            # Test Laravel
            echo "üîç Test de fonctionnement Laravel..."
            if php -r "require 'vendor/autoload.php'; echo '‚úÖ Autoloader OK';" 2>/dev/null; then
                echo "‚úÖ Laravel peut charger l'autoloader"
            else
                echo "‚ùå ERREUR: Probl√®me avec l'autoloader"
                echo "üìã Tentative de r√©paration..."
                composer dump-autoload
                echo "‚úÖ Autoloader r√©par√©"
            fi
            
            # Nettoyage
            echo "üßπ Nettoyage final..."
            sudo rm -rf "$BACKUP_DIR" 2>/dev/null || true
            
            # Red√©marrage Apache
            echo "üîÑ Red√©marrage d'Apache..."
            sudo systemctl restart apache2
            
            # Test final avec plus de patience
            echo "üìã Test final de l'application..."
            sleep 10
            
            for i in {1..5}; do
                if curl -s -f --connect-timeout 20 http://localhost >/dev/null 2>&1; then
                    echo "üéâ D√âPLOIEMENT R√âUSSI !"
                    echo "üåê Application accessible sur: https://vps-d91fd27c.vps.ovh.net"
                    exit 0
                fi
                echo "‚è≥ Tentative $i/5 - Attente suppl√©mentaire..."
                sleep 5
            done
            
            echo "‚ö†Ô∏è  L'application peut avoir des probl√®mes de configuration"
            echo "üí° V√©rifiez: sudo tail -f /var/www/studup-backend/storage/logs/laravel.log"
            echo "üí° V√©rifiez la base de donn√©es dans le .env"
            echo "‚úÖ D√âPLOIEMENT TERMIN√â - V√©rification manuelle recommand√©e"
            
            echo "=========================================="